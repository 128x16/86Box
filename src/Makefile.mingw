#
# 86Box		A hypervisor and IBM PC system emulator that specializes in
#		running old operating systems and software designed for IBM
#		PC systems and compatibles from 1981 through fairly recent
#		system designs based on the PCI bus.
#
#		This file is part of the 86Box distribution.
#
#		Modified Makefile for Win32 (MinGW32) environment.
#
# Version:	@(#)Makefile.mingw	1.0.38	2017/08/24
#
# Authors:	Miran Grca, <mgrca8@gmail.com>
#               Fred N. van Kempen, <decwiz@yahoo.com>
#

# Name of the executable.
ifndef PROG
PROG	= 86Box
endif

# Various compile-time options.
# -DROM_TRACE=0xc800 traces ROM access from segment C800
# -DIO_TRACE=0x66 traces I/O on port 0x66
STUFF	=

# Add feature selections here.
# -DANSI_CFG forces the config file to ANSI encoding.
# -DENABLE_VRAM_DUMP enables Video Ram dumping.
# -DENABLE_LOG_BREAKPOINT enables extra logging.
# -DENABLE_BUSLOGIC_LOG enables extra logging.
# -DENABLE_CDROM_LOG enables extra logging.
# -DENABLE_D86F_LOG enables extra logging.
# -DENABLE_FDC_LOG enables extra logging.
# -DENABLE_IDE_LOG enables extra logging.
# -DENABLE_SERIAL_LOG enables extra logging.
# -DENABLE_NIC_LOG enables extra logging.
ifndef EXTRAS
EXTRAS	=
endif

# Defaults for several build options (possibly defined in a chained file.)
ifndef DEBUG
DEBUG	= n
endif
ifndef OPTIM
OPTIM	= n
endif
ifndef RELEASE
RELEASE	= n
endif
ifndef USB
USB	= n
endif
ifndef DEV_BRANCH
DEV_BRANCH = n
endif
ifndef FLUIDSYNTH
FLUIDSYNTH = y
endif
ifndef X64
X64	= n
endif


#########################################################################
#		Nothing should need changing from here on..		#
#########################################################################
VPATH	= . CPU \
	    SOUND \
	      SOUND/MUNT SOUND/MUNT/c_interface SOUND/MUNT/sha1 \
	      SOUND/MUNT/srchelper \
	      SOUND/RESID-FP \
	    VIDEO LZF NETWORK NETWORK/SLIRP WIN
PLAT	= WIN/
ifeq ($(X64), y)
CPP	= g++.exe -m64
CC	= gcc.exe -m64
else
CPP	= g++.exe -m32
CC	= gcc.exe -m32
endif
WINDRES	= windres.exe

OPTS	= -DWIN32 -I$(PLAT) $(EXTRAS) $(STUFF)

ifeq ($(X64), y)
 ifeq ($(OPTIM), y)
  DFLAGS	= -march=native
 else
  DFLAGS	= 
 endif
else
 ifeq ($(OPTIM), y)
  DFLAGS	= -march=native
 else
  DFLAGS	= -march=i686
 endif
endif
ifeq ($(DEBUG), y)
 DFLAGS		+= -ggdb -DDEBUG
 AOPTIM		=
 ifndef COPTIM
  COPTIM	= -Og
 endif
else
 ifeq ($(OPTIM), y)
  AOPTIM	= -mtune=native
  ifndef COPTIM
   COPTIM	= -O6
  endif
 else
  ifndef COPTIM
   COPTIM	= -O3
  endif
 endif
endif
AFLAGS		= -msse -msse2 -mfpmath=sse
CFLAGS		= $(OPTS) $(DFLAGS) $(COPTIM) $(AOPTIM) $(AFLAGS) \
		  -fomit-frame-pointer -mstackrealign -Wall
RFLAGS		= --input-format=rc -O coff
ifeq ($(RELEASE), y)
CFLAGS		+= -DRELEASE_BUILD
RFLAGS		+= -DRELEASE_BUILD
endif
ifeq ($(VRAMDUMP), y)
CFLAGS		+= -DENABLE_VRAM_DUMP
RFLAGS		+= -DENABLE_VRAM_DUMP
endif
ifeq ($(FLUIDSYNTH), y)
CFLAGS		+= -DUSE_FLUIDSYNTH
FSYNTHOBJ	= midi_fluidsynth.o
endif
ifeq ($(X64), y)
PLATCG	= codegen_x86-64.o
CGOPS   = codegen_ops_x86-64.h
VCG     = vid_voodoo_codegen_x86-64.h
else
PLATCG	= codegen_x86.o
CGOPS   = codegen_ops_x86.h
VCG     = vid_voodoo_codegen_x86.h
endif


ifeq ($(DEV_BRANCH), y)
DBFLAGS = -DDEV_BRANCH
else
DBFLAGS = 
endif

ifeq ($(DEV_BRANCH), y)
CFLAGS		+= -DDEV_BRANCH
endif

ifeq ($(WALTJE), y)
OPENDIR = win_opendir.o
SERIAL	= serial.o
WSERIAL = win_serial.o
WFLAGS	= -DWALTJE
else
SERIAL	= serial_old.o
endif


MAINOBJ	= pc.o config.o device.o timer.o dma.o io.o nmi.o pic.o \
	  mca.o mcr.o pit.o ppi.o pci.o sio.o intel.o rom.o mem.o \
	  memregs.o intel_flash.o rtc.o nvr.o ps2_nvr.o
CPUOBJ	= cpu.o 386.o 386_dynarec.o 386_dynarec_ops.o 808x.o \
	  codegen.o \
	    codegen_ops.o \
	    codegen_timing_common.o codegen_timing_486.o \
	    codegen_timing_686.o codegen_timing_pentium.o \
	    codegen_timing_winchip.o $(PLATCG) \
	  x86seg.o x87.o
SYSOBJ	= model.o \
	  headland.o \
	  i430hx.o i430lx.o i430fx.o i430nx.o i430vx.o i440fx.o \
	  neat.o \
	  ali1429.o \
	  opti495.o \
	  scat.o \
	  sis496.o \
	  wd76c10.o \
	  acer386sx.o amstrad.o \
	  compaq.o laserxt.o jim.o \
	  olivetti_m24.o ps1.o ps2.o ps2_mca.o \
	  tandy_eeprom.o tandy_rom.o
DEVOBJ	= bugger.o lpt.o $(SERIAL) \
	  fdc37c665.o fdc37c669.o fdc37c932fr.o \
	  pc87306.o sis85c471.o w83877f.o um8669f.o \
	  keyboard.o \
	    keyboard_xt.o keyboard_at.o keyboard_pcjr.o \
	    keyboard_amstrad.o keyboard_olim24.o \
	  gameport.o \
	    joystick_standard.o joystick_ch_flightstick_pro.o \
	    joystick_sw_pad.o joystick_tm_fcs.o \
	  mouse.o mouse_serial.o mouse_ps2.o mouse_bus.o \
	  fdd.o fdc.o fdi2raw.o \
	  hdd.o hdd_image.o \
	    hdd_mfm_at.o hdd_mfm_xebec.o hdd_esdi_at.o hdd_esdi_mca.o \
	    hdd_ide_at.o hdd_ide_xt.o piix.o \
	    disc.o \
	    disc_86f.o disc_fdi.o disc_imd.o disc_img.o \
	    disc_random.o disc_td0.o \
	  cdrom.o \
	    cdrom_dosbox.o cdrom_image.o cdrom_ioctl.o cdrom_null.o
ifdef USB
USBOBJ	= usb.o
endif
NETOBJ	= network.o \
	  net_pcap.o \
	  net_slirp.o \
	    bootp.o ip_icmp.o misc.o socket.o tcp_timer.o cksum.o \
	    ip_input.o queue.o tcp_input.o debug.o ip_output.o \
	    sbuf.o tcp_output.o udp.o if.o mbuf.o slirp.o tcp_subr.o \
	  net_ne2000.o
SCSIOBJ	= scsi.o scsi_device.o scsi_disk.o scsi_buslogic.o scsi_aha154x.o
SNDOBJ	= sound.o \
	  openal.o \
	  dbopl.o nukedopl.o \
	  convolve.o convolve-sse.o envelope.o extfilt.o \
	  filter.o pot.o sid.o voice.o wave6581__ST.o \
	  wave6581_P_T.o wave6581_PS_.o wave6581_PST.o \
	  wave8580__ST.o wave8580_P_T.o wave8580_PS_.o \
	  wave8580_PST.o wave.o \
	  midi.o $(FSYNTHOBJ) \
	  midi_mt32.o \
	    Analog.o BReverbModel.o File.o FileStream.o LA32Ramp.o \
	    LA32FloatWaveGenerator.o LA32WaveGenerator.o \
	    MidiStreamParser.o Part.o Partial.o PartialManager.o \
	    Poly.o ROMInfo.o SampleRateConverter_dummy.o Synth.o \
	    Tables.o TVA.o TVF.o TVP.o sha1.o c_interface.o \
	  midi_system.o \
	  snd_speaker.o snd_ps1.o snd_pssj.o \
	  snd_adlib.o snd_adlibgold.o snd_ad1848.o \
	  snd_sb.o snd_sb_dsp.o snd_cms.o snd_dbopl.o \
	  snd_emu8k.o snd_gus.o snd_opl.o \
	  snd_mpu401.o snd_pas16.o snd_resid.o \
	  snd_sn76489.o snd_ssi2001.o snd_wss.o \
	  snd_ym7128.o
VIDOBJ	= video.o \
	  vid_cga.o vid_cga_comp.o vid_mda.o \
	  vid_ega.o vid_ega_render.o \
	  vid_vga.o vid_svga.o vid_svga_render.o \
	  vid_hercules.o vid_herculesplus.o vid_incolor.o \
	  vid_colorplus.o \
	  vid_genius.o \
	  vid_s3.o vid_s3_virge.o \
	  vid_et4000.o vid_et4000w32.o vid_icd2061.o \
	  vid_oti067.o \
	  vid_paradise.o \
	  vid_tvga.o vid_tgui9440.o vid_tkd8001_ramdac.o \
	  vid_ati_eeprom.o vid_ati18800.o vid_ati28800.o \
	    vid_ati68860_ramdac.o vid_ati_mach64.o \
	    vid_ics2595.o \
	  vid_sc1502x_ramdac.o \
	  vid_sdac_ramdac.o \
	  vid_stg_ramdac.o \
	  vid_wy700.o \
	  vid_voodoo.o \
	  vid_pcjr.o vid_ps1_svga.o \
	  vid_olivetti_m24.o \
	  vid_pc1512.o vid_pc1640.o vid_pc200.o \
	  vid_tandy.o vid_tandysl.o
WINOBJ	= win.o \
	  win_ddraw.o win_ddraw_fs.o win_ddraw_screenshot.o \
	  win_d3d.o win_d3d_fs.o \
	  win_language.o win_status.o $(OPENDIR) win_dynld.o \
	  win_video.o $(WSERIAL) win_keyboard.o win_mouse.o \
	  win_iodev.o win_joystick.o win_midi.o \
	  win_settings.o win_deviceconfig.o win_joystickconfig.o \
	  86Box.res
ifeq ($(DEV_BRANCH), y)
DEVBRANCHOBJ = vid_cl_gd.o vid_cl_gd_blit.o vid_cl_ramdac.o \
	       vid_nv_riva128.o
endif
OBJ	= $(MAINOBJ) $(CPUOBJ) $(SYSOBJ) $(DEVOBJ) $(USBOBJ) \
	  $(NETOBJ) $(SCSIOBJ) $(SNDOBJ) $(VIDOBJ) $(WINOBJ) \
	  $(DEVBRANCHOBJ)

LZFOBJ	= lzf_c.o lzf_d.o

LIBS	= -mwindows \
	  -lopenal.dll \
	  -lddraw -ldinput8 -ldxguid -ld3d9 -ld3dx9 \
	  -lcomctl32 -lkernel32 -lwsock32 -lwinmm -liphlpapi -lpsapi \
	  -static -lstdc++ -lgcc


# Build rules.
%.o:		%.c
		@echo $<
		@$(CC) $(CFLAGS) $(WFLAGS) -c $<

%.o:		%.cc
		@echo $<
		@$(CPP) $(CFLAGS) $(WFLAGS) -c $<

%.o:		%.cpp
		@echo $<
		@$(CPP) $(CFLAGS) $(WFLAGS) -c $<

all:		$(PROG).exe pcap_if.exe


$(PROG).exe:	$(OBJ) $(LZFOBJ)
		@echo Linking $(PROG).exe ..
		@$(CC) -o $(PROG).exe $(OBJ) $(LZFOBJ) $(LIBS)
ifneq ($(DEBUG), y)
		@strip $(PROG).exe
endif

pcap_if.exe:	pcap_if.o win_dynld.o pcap_if.res
		@echo Linking pcap_if.exe ..
		@$(CC) -o pcap_if.exe pcap_if.o win_dynld.o pcap_if.res
ifneq ($(DEBUG), y)
		@strip pcap_if.exe
endif



clean:
		-rm *.o
		-rm *.exe
		-rm *.res

86Box.res:	86Box.rc
		@echo Processing $<
		@$(WINDRES) $(RFLAGS) $(EXTRAS) -i WIN/86Box.rc -o 86Box.res

pcap_if.res:	pcap_if.rc
		@echo Processing $<
		@$(WINDRES) $(RFLAGS) -i WIN/pcap_if.rc -o pcap_if.res


# Module dependencies.
acer386sx.o:	ibm.h CPU/cpu.h io.h device.h model.h

ali1429.o:	ibm.h CPU/cpu.h io.h mem.h device.h model.h

amstrad.o:	ibm.h CPU/cpu.h io.h device.h model.h keyboard.h lpt.h mouse.h

bugger.o:	ibm.h io.h bugger.h

cdrom.o:	86box.h cdrom.h ibm.h hdd_ide_at.h piix.h scsi.h timer.h \
		WIN/plat_iodev.h

cdrom_dosbox.o:	cdrom_dosbox.h

cdrom_image.o:	config.h cdrom_dosbox.h cdrom.h cdrom_image.h cdrom_null.h

cdrom_ioctl.o:	ibm.h cdrom.h cdrom_ioctl.h scsi.h

cdrom_null.o:	ibm.h cdrom.h cdrom_ioctl.h

compaq.o:	ibm.h CPU/cpu.h mem.h device.h model.h

config.o:	cdrom.h config.h device.h disc.h fdc.h fdd.h ibm.h \
		CPU/cpu.h gameport.h hdd_ide_at.h hdd.h model.h mouse.h \
		NETWORK/network.h nvr.h scsi.h WIN/plat_joystick.h \
		WIN/plat_midi.h SOUND/snd_dbopl.h SOUND/snd_mpu401.h \
		SOUND/snd_opl.h SOUND/sound.h VIDEO/video.h WIN/win.h \
		WIN/resource.h WIN/win_language.h

device.o:	ibm.h CPU/cpu.h config.h device.h model.h SOUND/sound.h

disc.o:		ibm.h config.h disc.h disc_fdi.h disc_img.h disc_86f.h \
		disc_td0.h disc_imd.h fdc.h fdd.h timer.h

disc_86f.o:	LZF/lzf.h config.h dma.h disc.h disc_86f.h disc_random.h \
		fdc.h fdd.h ibm.h

disc_fdi.o:	ibm.h disc.h disc_img.h disc_fdi.h fdc.h fdd.h fdi2raw.h \
		disc.h disc_imd.h fdc.h fdd.h config.h disc.h disc_img.h \
	        fdc.h fdd.h

disc_random.o:	disc_random.h

disc_td0.o:	ibm.h disc.h disc_td0.h fdc.h fdd.h

dma.o:		ibm.h CPU/x86.h mem.h io.h dma.h

fdc.o:		ibm.h disc.h dma.h fdc.h fdd.h io.h pic.h timer.h

fdc37c665.o:	ibm.h disc.h fdc.h fdd.h hdd_ide_at.h io.h lpt.h serial.h \
		fdc37c665.h disc.h fdc.h fdd.h io.h hdd_ide_at.h \
		lpt.h serial.h fdc37c669.h

fdc37c932fr.o:	ibm.h disc.h fdc.h fdd.h hdd_ide_at.h io.h lpt.h \
		serial.h fdc37c932fr.h

fdd.o:		ibm.h disc.h fdc.h fdd.h

fdi2raw.o:	fdi2raw.h ibm.h

gameport.o:	ibm.h CPU/cpu.h device.h io.h timer.h gameport.h \
		joystick_ch_flightstick_pro.h joystick_standard.h \
		joystick_sw_pad.h joystick_tm_fcs.h plat_joystick.h

hdd.o:		ibm.h CPU/cpu.h device.h hdd.h model.h hdd_esdi_at.h \
		hdd_esdi_mca.h hdd_mfm_at.h hdd_mfm_xebec.h hdd_ide_xt.h

hdd_image.o:	ibm.h hdd_ide_at.h hdd_image.h

hdd_esdi_at.o:	ibm.h device.h hdd_image.h io.h mem.h pic.h rom.h timer.h \
		hdd_esdi_at.h

hdd_esdi_mca.o:	ibm.h device.h dma.h hdd_image.h io.h mca.h mem.h \
		pic.h rom.h timer.h hdd_esdi_mca.h

hdd_ide_at.o:	86box.h cdrom.h hdd_image.h ibm.h io.h pic.h timer.h \
		cdrom.h scsi.h hdd_ide_at.h

hdd_ide_xt.o:	ibm.h io.h mem.h rom.h device.h hdd_ide_at.h hdd_ide_xt.h

hdd_mfm_at.o:	ibm.h device.h hdd_image.h io.h pic.h timer.h hdd_mfm_at.h

hdd_mfm_xebec.o: ibm.h device.h dma.h hdd_image.h io.h mem.h pic.h rom.h \
		timer.h hdd_mfm_xebec.h

headland.o:	ibm.h CPU/cpu.h io.h mem.h device.h model.h

i430fx.o:	ibm.h CPU/cpu.h mem.h pci.h device.h model.h

i430hx.o:	ibm.h CPU/cpu.h io.h mem.h pci.h device.h model.h

i430lx.o:	ibm.h CPU/cpu.h mem.h pci.h device.h model.h

i430nx.o:	ibm.h CPU/cpu.h mem.h pci.h device.h model.h

i430vx.o:	ibm.h CPU/cpu.h io.h mem.h pci.h device.h model.h

i440fx.o:	ibm.h CPU/cpu.h io.h mem.h pci.h device.h model.h

intel.o:	ibm.h CPU/cpu.h io.h mem.h pit.h timer.h intel.h

intel_flash.o:	ibm.h CPU/cpu.h device.h mem.h model.h rom.h

io.o:		ibm.h io.h

jim.o:		ibm.h CPU/cpu.h io.h device.h model.h

joystick_ch_flightstick_pro.o:	ibm.h device.h timer.h gameport.h \
		joystick_standard.h plat_joystick.h

joystick_standard.o:	ibm.h device.h timer.h gameport.h \
		joystick_standard.h plat_joystick.h

joystick_sw_pad.o:	ibm.h device.h timer.h gameport.h \
		joystick_sw_pad.h plat_joystick.h

joystick_tm_fcs.o:	ibm.h device.h timer.h gameport.h \
		joystick_standard.h plat_joystick.h

keyboard.o:	ibm.h plat_keyboard.h keyboard.h

keyboard_amstrad.o:	ibm.h io.h mem.h pic.h pit.h timer.h SOUND/sound.h \
		SOUND/snd_speaker.h keyboard.h keyboard_amstrad.h

keyboard_at.o:	ibm.h io.h mem.h pic.h pit.h timer.h disc.h fdc.h \
		SOUND/sound.h SOUND/snd_speaker.h keyboard.h keyboard_at.h

keyboard_olim24.o:	ibm.h io.h mem.h pic.h pit.h timer.h mouse.h \
		SOUND/sound.h SOUND/snd_speaker.h keyboard.h keyboard_olim24.h

keyboard_pcjr.o:	ibm.h io.h mem.h nmi.h pic.h pit.h timer.h \
		device.h SOUND/sound.h SOUND/snd_speaker.h \
		SOUND/snd_sn76489.h keyboard.h keyboard_pcjr.h

keyboard_xt.o:	ibm.h io.h mem.h pic.h pit.h timer.h device.h tandy_eeprom.h \
		SOUND/sound.h SOUND/snd_speaker.h keyboard.h keyboard_xt.h

laserxt.o:	ibm.h CPU/cpu.h io.h mem.h device.h model.h

lpt.o:		ibm.h io.h lpt.h

mca.o:		ibm.h io.h mem.h mca.h

mcr.o:		ibm.h

mem.o:		ibm.h CPU/cpu.h CPU/x86_ops.h CPU/x86.h config.h \
		io.h mem.h rom.h CPU/codegen.h VIDEO/video.h

memregs.o:	ibm.h io.h memregs.h

model.o:	ibm.h io.h mem.h rom.h device.h model.h CPU/cpu.h \
		mouse.h cdrom.h disc.h dma.h fdc.h fdc37c665.h fdc37c669.h \
		fdc37c932fr.h gameport.h hdd_ide_at.h intel.h intel_flash.h \
		keyboard_amstrad.h keyboard_at.h keyboard_olim24.h \
		keyboard_pcjr.h keyboard_xt.h lpt.h mem.h memregs.h \
		nmi.h nvr.h pc87306.h pci.h pic.h piix.h pit.h ps2_mca.h \
		serial.h sis85c471.h sio.h SOUND/snd_ps1.h SOUND/snd_pssj.h \
		SOUND/snd_sn76489.h tandy_eeprom.h tandy_rom.h \
		VIDEO/vid_pcjr.h VIDEO/vid_tandy.h w83877f.h wd76c10.h \
		hdd_ide_xt.h bugger.h

mouse.o:	ibm.h CPU/cpu.h device.h model.h mouse.h keyboard_olim24.h

mouse_bus.o:	ibm.h io.h pic.h timer.h mouse.h

mouse_ps2.o:	ibm.h keyboard_at.h mouse.h plat_mouse.h

mouse_serial.o:	ibm.h timer.h serial.h mouse.h

neat.o:		ibm.h CPU/cpu.h io.h device.h model.h

nmi.o:		ibm.h io.h nmi.h

nvr.o:		ibm.h CPU/cpu.h device.h io.h mem.h model.h nvr.h \
		pic.h rom.h timer.h rtc.h

olivetti_m24.o:	ibm.h CPU/cpu.h io.h device.h model.h

opti495.o:	ibm.h CPU/cpu.h io.h mem.h device.h model.h

pc.o:		86box.h ibm.h mem.h CPU/cpu.h CPU/x86_ops.h CPU/codegen.h \
		dma.h nvr.h pic.h pit.h timer.h device.h model.h disc.h \
		disc_86f.h disc_fdi.h disc_imd.h disc_img.h disc_td0.h \
		disc_random.h config.h fdc.h fdd.h gameport.h plat_joystick.h \
		plat_midi.h hdd.h hdd_ide_at.h cdrom.h cdrom_ioctl.h \
		cdrom_image.h cdrom_null.h scsi.h keyboard.h plat_keyboard.h \
		keyboard_at.h mouse.h plat_mouse.h NETWORK/network.h serial.h \
		SOUND/sound.h SOUND/snd_cms.h SOUND/snd_dbopl.h \
		SOUND/snd_mpu401.h SOUND/snd_opl.h SOUND/snd_gus.h \
		SOUND/snd_sb.h SOUND/snd_speaker.h SOUND/snd_ssi2001.h \
		VIDEO/video.h VIDEO/vid_voodoo.h WIN/plat_ui.h

pc87306.o:	ibm.h disc.h fdc.h fdd.h hdd_ide_at.h io.h lpt.h serial.h \
		pc87306.h

pci.o:		ibm.h io.h mem.h pic.h pci.h

pic.o:		ibm.h io.h pic.h pit.h

piix.o:		ibm.h dma.h hdd_ide_at.h io.h mem.h pci.h piix.h

pit.o:		ibm.h CPU/cpu.h dma.h io.h pic.h pit.h device.h timer.h \
		model.h SOUND/snd_speaker.h video/video.h

ppi.o:		ibm.h pit.h plat_keyboard.h plat_mouse.h

ps1.o:		ibm.h CPU/cpu.h io.h mem.h rom.h device.h model.h lpt.h serial.h

ps2.o:		ibm.h CPU/cpu.h io.h mem.h rom.h device.h model.h lpt.h serial.h

ps2_mca.o:	ibm.h CPU/cpu.h CPU/x86.h io.h mca.h mem.h rom.h device.h \
		lpt.h ps2_mca.h ps2_nvr.h serial.h

ps2_nvr.o:	ibm.h device.h io.h mem.h rom.h ps2_nvr.h

rom.o:		config.h ibm.h mem.h rom.h

rtc.o:		nvr.h rtc.h

scat.o:		ibm.h CPU/cpu.h io.h mem.h device.h model.h

scsi.o:		86box.h ibm.h timer.h device.h cdrom.h scsi.h \
		scsi_aha154x.h scsi_buslogic.h

scsi_device.o:	ibm.h scsi.h scsi_disk.h cdrom.h

scsi_aha154x.o:	ibm.h io.h mca.h mem.h mca.h rom.h dma.h pic.h timer.h \
		device.h cdrom.h scsi.h scsi_disk.h scsi_aha154x.h \

scsi_buslogic.o: ibm.h io.h mem.h rom.h dma.h pic.h pci.h timer.h \
		device.h scsi.h scsi_device.h scsi_disk.h cdrom.h \
		scsi_buslogic.h

scsi_disk.o:	86box.h cdrom.h hdd_image.h ibm.h hdd_ide_at.h piix.h scsi.h \
		scsi_disk.h timer.h WIN/plat_iodev.h

serial.o:	ibm.h io.h pic.h timer.h serial.h plat_serial.h

serial_old.o:	ibm.h io.h mouse.h pic.h serial.h timer.h

sio.o:		ibm.h cdrom.h disc.h dma.h fdc.h keyboard_at.h io.h mem.h \
		hdd_ide_at.h pci.h sio.h

sis496.o:	ibm.h CPU/cpu.h io.h mem.h pci.h device.h model.h

sis50x.o:	ibm.h device.h io.h mem.h pci.h sis50x.h

sis85c471.o:	ibm.h hdd_ide_at.h disc.h fdc.h fdd.h io.h lpt.h serial.h sis85c471.h

superio_detect.o:	ibm.h io.h disc.h fdd.h fdc.h superio_detect.h

tandy_eeprom.o:	ibm.h device.h mem.h io.h rom.h tandy_eeprom.h

tandy_rom.o:	ibm.h device.h io.h mem.h rom.h tandy_rom.h

timer.o:	ibm.h timer.h

usb.o:		ibm.h io.h mem.h usb.h

w83877f.o:	ibm.h disc.h fdc.h fdd.h io.h lpt.h serial.h w83877f.h

wd76c10.o:	ibm.h disc.h fdc.h io.h mem.h serial.h wd76c10.h

386.o:		ibm.h CPU/cpu.h CPU/x86.h CPU/x87.h mem.h disc.h fdc.h pic.h timer.h CPU/386_common.h

386_dynarec.o:	ibm.h CPU/cpu.h CPU/x86.h CPU/x86_ops.h CPU/x87.h mem.h CPU/codegen.h disc.h fdc.h pic.h timer.h CPU/386_common.h \
		CPU/x86_ops.h CPU/x86seg.h CPU/x86_ops_arith.h CPU/x86_ops_atomic.h CPU/x86_ops_bcd.h CPU/x86_ops_bit.h \
		CPU/x86_ops_bitscan.h CPU/x86_ops_call.h CPU/x86_ops_flag.h CPU/x86_ops_fpu.h CPU/x86_ops_inc_dec.h CPU/x86_ops_int.h \
		CPU/x86_ops_io.h CPU/x86_ops_jump.h CPU/x86_ops_misc.h \
		CPU/x87_ops_arith.h CPU/x87_ops_misc.h CPU/x87_ops_loadstore.h \
		CPU/x87_ops.h CPU/x86_ops_i686.h CPU/x86_ops_mmx.h \
		CPU/x86_ops_mmx_arith.h CPU/x86_ops_mmx_cmp.h CPU/x86_ops_mmx_logic.h CPU/x86_ops_mmx_pack.h CPU/x86_ops_mmx_shift.h \
		CPU/x86_ops_mov.h CPU/x86_ops_mov_ctrl.h CPU/x86_ops_mov_seg.h CPU/x86_ops_movx.h CPU/x86_ops_msr.h CPU/x86_ops_mul.h \
		CPU/x86_ops_pmode.h CPU/x86_ops_prefix.h CPU/x86_ops_rep.h CPU/x86_ops_ret.h CPU/x86_ops_set.h CPU/x86_ops_shift.h \
		CPU/x86_ops_stack.h CPU/x86_ops_string.h CPU/x86_ops_xchg.h \
		CPU/386_ops.h

386_dynarec_ops.o:	ibm.h CPU/cpu.h CPU/x86.h CPU/x86_ops.h CPU/x87.h CPU/x86_flags.h mem.h CPU/codegen.h pic.h CPU/386_common.h \
			CPU/x86_ops.h CPU/x86seg.h CPU/x86_ops_arith.h CPU/x86_ops_atomic.h CPU/x86_ops_bcd.h CPU/x86_ops_bit.h \
			CPU/x86_ops_bitscan.h CPU/x86_ops_call.h CPU/x86_ops_flag.h CPU/x86_ops_fpu.h CPU/x86_ops_inc_dec.h CPU/x86_ops_int.h \
			CPU/x86_ops_io.h CPU/x86_ops_jump.h CPU/x86_ops_misc.h \
			CPU/x87_ops_arith.h CPU/x87_ops_misc.h CPU/x87_ops_loadstore.h \
			CPU/x87_ops.h CPU/x86_ops_i686.h CPU/x86_ops_mmx.h \
			CPU/x86_ops_mmx_arith.h CPU/x86_ops_mmx_cmp.h CPU/x86_ops_mmx_logic.h CPU/x86_ops_mmx_pack.h CPU/x86_ops_mmx_shift.h \
			CPU/x86_ops_mov.h CPU/x86_ops_mov_ctrl.h CPU/x86_ops_mov_seg.h CPU/x86_ops_movx.h CPU/x86_ops_msr.h CPU/x86_ops_mul.h \
			CPU/x86_ops_pmode.h CPU/x86_ops_prefix.h CPU/x86_ops_rep.h CPU/x86_ops_ret.h CPU/x86_ops_set.h CPU/x86_ops_shift.h \
			CPU/x86_ops_stack.h CPU/x86_ops_string.h CPU/x86_ops_xchg.h \
			CPU/386_ops.h

808x.o:		ibm.h CPU/cpu.h CPU/x86.h keyboard.h mem.h nmi.h pic.h scsi.h timer.h

codegen.o:	ibm.h CPU/x86_ops.h mem.h CPU/codegen.h

codegen_ops.o:	ibm.h mem.h CPU/x86.h CPU/x86_ops.h CPU/x86_flags.h CPU/x87.h CPU/386_common.h CPU/cpu.h CPU/codegen.h CPU/codegen_ops.h \
		CPU/$(CGOPS) CPU/codegen_ops_arith.h CPU/codegen_ops_fpu.h CPU/codegen_ops_jump.h CPU/codegen_ops_logic.h CPU/codegen_ops_misc.h \
		CPU/codegen_ops_mmx.h CPU/codegen_ops_mov.h CPU/codegen_ops_shift.h CPU/codegen_ops_stack.h CPU/codegen_ops_xchg.h

codegen_timing_486.o:	ibm.h CPU/cpu.h CPU/x86.h CPU/x87_ops.h CPU/x87.h mem.h CPU/codegen.h CPU/codegen_ops.h CPU/codegen_timing_common.h

codegen_timing_686.o:	ibm.h CPU/cpu.h CPU/x86.h CPU/x87_ops.h CPU/x87.h mem.h CPU/codegen.h CPU/codegen_timing_common.h

codegen_timing_common.o:	ibm.h CPU/codegen_timing_common.h

codegen_timing_pentium.o:	ibm.h CPU/cpu.h CPU/x86.h CPU/x87_ops.h CPU/x87.h mem.h CPU/codegen.h CPU/codegen_ops.h CPU/codegen_timing_common.h

codegen_timing_winchip.o:	ibm.h CPU/cpu.h CPU/x86.h CPU/x87_ops.h CPU/x87.h mem.h CPU/codegen.h CPU/codegen_ops.h CPU/codegen_timing_common.h

codegen_x86.o:		ibm.h CPU/cpu.h CPU/x86.h CPU/x86_flags.h CPU/x86_ops.h CPU/x87.h mem.h CPU/386_common.h CPU/codegen.h CPU/codegen_ops.h \
			CPU/codegen_ops_x86.h

codegen_x86-64.o:	ibm.h mem.h CPU/cpu.h CPU/x86.h CPU/x86_flags.h CPU/x86_ops.h CPU/x87.h CPU/386_common.h CPU/codegen.h CPU/codegen_ops.h \
			CPU/codegen_ops_x86-64.h

cpu.o:		ibm.h CPU/cpu.h device.h model.h io.h CPU/x86_ops.h mem.h pci.h CPU/codegen.h

x86seg.o:	ibm.h mem.h nvr.h CPU/x86.h CPU/386.h CPU/386_common.h CPU/cpu.h

x87.o:		ibm.h pic.h CPU/x86.h CPU/x86_flags.h CPU/x86_ops.h CPU/x87.h CPU/386_common.h

net_ne2000.o:	ibm.h io.h mem.h rom.h pci.h pic.h device.h config.h disc_random.h NETWORK/network.h NETWORK/net_ne2000.h NETWORK/bswap.h

net_pcap.o:	ibm.h config.h device.h NETWORK/network.h WIN/plat_dynld.h WIN/plat_thread.h

net_slirp.o:	NETWORK/slirp/slirp.h NETWORK/slirp/queue.h ibm.h config.h device.h NETWORK/network.h WIN/plat_thread.h

network.o:	ibm.h device.h NETWORK/network.h NETWORK/net_ne2000.h WIN/plat_ui.h

vid_ati_eeprom.o:	ibm.h mem.h rom.h VIDEO/vid_ati_eeprom.h

vid_ati_mach64.o:	ibm.h device.h io.h mem.h pci.h rom.h WIN/plat_thread.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_svga_render.h \
			VIDEO/vid_ati68860_ramdac.h VIDEO/vid_ati_eeprom.h VIDEO/vid_ics2595.h

vid_ati18800.o:		ibm.h io.h mem.h rom.h device.h VIDEO/video.h VIDEO/vid_ati18800.h VIDEO/vid_ati_eeprom.h VIDEO/vid_svga.h

vid_ati28800.o:		ibm.h io.h mem.h rom.h device.h timer.h VIDEO/video.h VIDEO/vid_ati28800.h VIDEO/vid_ati_eeprom.h VIDEO/vid_svga.h \
			VIDEO/vid_svga_render.h

vid_ati68860_ramdac.o:	ibm.h mem.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_ati68860_ramdac.h VIDEO/vid_svga_render.h

vid_cga.o:		ibm.h io.h mem.h timer.h device.h VIDEO/video.h VIDEO/vid_cga.h VIDEO/vid_cga_comp.h WIN/win_cgapal.h

vid_cga_comp.o:		ibm.h device.h mem.h VIDEO/vid_cga.h VIDEO/vid_cga_comp.h

vid_cl_gd.o:		ibm.h io.h mem.h rom.h device.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_svga_render.h VIDEO/vid_cl_ramdac.h \
			VIDEO/vid_cl_gd.h VIDEO/vid_cl_gd_blit.h

vid_cl_gd_blit.o:	ibm.h io.h mem.h rom.h device.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_svga_render.h VIDEO/vid_cl_ramdac.h \
			VIDEO/vid_cl_gd.h VIDEO/vid_cl_gd_blit.h VIDEO/vid_cl_gd_vga_rop.h

vid_cl_gd_ramdac.o:	ibm.h mem.h rom.h device.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_cl_ramdac.h VIDEO/vid_cl_gd.h \
			VIDEO/vid_cl_gd_blit.h

vid_colorplus.o:	ibm.h io.h mem.h timer.h device.h VIDEO/video.h VIDEO/vid_cga.h VIDEO/vid_colorplus.h VIDEO/vid_cga_comp.h

vid_ega.o:		ibm.h io.h mem.h rom.h timer.h device.h VIDEO/video.h VIDEO/vid_ega.h VIDEO/vid_ega_render.h

vid_ega_render.o:	ibm.h device.h mem.h rom.h VIDEO/video.h VIDEO/vid_ega.h VIDEO/vid_ega_render.h

vid_et4000.o:		ibm.h io.h mem.h rom.h device.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_sc1502x_ramdac.h VIDEO/vid_et4000.h

vid_et4000w32.o:	ibm.h io.h mem.h pci.h rom.h device.h WIN/plat_thread.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_icd2061.h \
			VIDEO/vid_stg_ramdac.h

vid_genius.o:		ibm.h io.h mem.h rom.h timer.h device.h VIDEO/video.h VIDEO/vid_genius.h

vid_hercules.o:		ibm.h mem.h io.h timer.h device.h VIDEO/video.h VIDEO/vid_hercules.h WIN/win_cgapal.h

vid_herculesplus.o:	ibm.h io.h mem.h timer.h device.h VIDEO/video.h VIDEO/vid_herculesplus.h

vid_icd2061.o:		ibm.h VIDEO/vid_icd2061.h

vid_ics2595.o:		ibm.h VIDEO/vid_ics2595.h

vid_incolor.o:		ibm.h io.h mem.h timer.h device.h VIDEO/video.h VIDEO/vid_incolor.h

vid_mda.o:		ibm.h io.h mem.h timer.h device.h VIDEO/video.h VIDEO/vid_mda.h WIN/win_cgapal.h

vid_nv_riva128.o:	ibm.h io.h mem.h pci.h pic.h rom.h timer.h device.h WIN/plat_thread.h VIDEO/video.h VIDEO/vid_svga.h \
			VIDEO/vid_svga_render.h

vid_olivetti_m24.o:	ibm.h io.h mem.h timer.h device.h VIDEO/video.h VIDEO/vid_olivetti_m24.h

vid_oti067.o:		ibm.h io.h mem.h rom.h device.h VIDEO/video.h VIDEO/vid_oti067.h VIDEO/vid_svga.h

vid_paradise.o:		ibm.h io.h mem.h rom.h device.h VIDEO/video.h VIDEO/vid_paradise.h VIDEO/vid_svga.h VIDEO/vid_svga_render.h

vid_pc200.o:		ibm.h io.h mem.h timer.h device.h VIDEO/video.h VIDEO/vid_cga.h VIDEO/vid_pc200.h

vid_pc1512.o:		ibm.h io.h mem.h timer.h device.h VIDEO/video.h VIDEO/vid_pc1512.h

vid_pc1640.o:		ibm.h io.h mem.h rom.h timer.h device.h VIDEO/video.h VIDEO/vid_cga.h VIDEO/vid_ega.h VIDEO/vid_pc1640.h

vid_pcjr.o:		ibm.h io.h mem.h pic.h timer.h device.h VIDEO/video.h VIDEO/vid_cga_comp.h VIDEO/vid_pcjr.h

vid_ps1_svga.o:		ibm.h io.h mem.h rom.h device.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_vga.h

vid_s3.o:		ibm.h device.h io.h mem.h pci.h rom.h WIN/plat_thread.h VIDEO/video.h VIDEO/vid_s3.h VIDEO/vid_svga.h \
			VIDEO/vid_svga_render.h VIDEO/vid_sdac_ramdac.h

vid_s3_virge.o:		ibm.h io.h mem.h pci.h rom.h device.h WIN/plat_thread.h VIDEO/video.h VIDEO/vid_s3_virge.h VIDEO/vid_svga.h \
			VIDEO/vid_svga_render.h

vid_sc1502x_ramdac.o:	ibm.h mem.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_sc1502x_ramdac.h

vid_sdac_ramdac.o:	ibm.h mem.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_sdac_ramdac.h

vid_stg_ramdac.o:	ibm.h mem.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_stg_ramdac.h

vid_svga.o:		ibm.h io.h mem.h rom.h timer.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_svga_render.h

vid_svga_render.o:	ibm.h mem.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_svga_render.h

vid_tandy.o:		ibm.h io.h mem.h timer.h device.h VIDEO/video.h VIDEO/vid_tandy.h VIDEO/vid_cga_comp.h

vid_tandysl.o:		ibm.h io.h mem.h timer.h device.h VIDEO/video.h VIDEO/vid_tandysl.h

vid_tgui9440.o:		ibm.h io.h mem.h pci.h rom.h device.h WIN/plat_thread.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_svga_render.h \
			VIDEO/vid_tkd8001_ramdac.h VIDEO/vid_tgui9440.h

vid_tkd8001_ramdac.o:	ibm.h mem.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_tkd8001_ramdac.h

vid_tvga.o:		ibm.h io.h mem.h rom.h device.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_svga_render.h VIDEO/vid_tkd8001_ramdac.h \
			VIDEO/vid_tvga.h

vid_vga.o:		ibm.h io.h mem.h rom.h device.h VIDEO/video.h VIDEO/vid_svga.h VIDEO/vid_vga.h

vid_voodoo.o:		ibm.h CPU/cpu.h mem.h rom.h pci.h timer.h device.h WIN/plat_thread.h VIDEO/video.h VIDEO/vid_svga.h \
			VIDEO/vid_voodoo.h VIDEO/vid_voodoo_dither.h VIDEO/$(VCG)

vid_wy700.o:		ibm.h io.h mem.h timer.h device.h VIDEO/video.h VIDEO/vid_wy700.h

video.o:		ibm.h CPU/cpu.h io.h mem.h rom.h config.h device.h timer.h WIN/plat_thread.h VIDEO/video.h VIDEO/vid_svga.h \
			WIN/resource.h WIN/win.h WIN/win_cgapal.h \
			VIDEO/vid_ati18800.h VIDEO/vid_ati28800.h VIDEO/vid_ati_mach64.h VIDEO/vid_cga.h \
			VIDEO/vid_cl_ramdac.h VIDEO/vid_cl_gd.h \
			VIDEO/vid_ega.h VIDEO/vid_et4000.h VIDEO/vid_et4000w32.h VIDEO/vid_genius.h VIDEO/vid_hercules.h \
			VIDEO/vid_herculesplus.h VIDEO/vid_incolor.h VIDEO/vid_colorplus.h VIDEO/vid_mda.h \
			VIDEO/vid_nv_riva128.h \
			VIDEO/vid_olivetti_m24.h VIDEO/vid_oti067.h VIDEO/vid_paradise.h VIDEO/vid_pc1512.h VIDEO/vid_pc1640.h \
			VIDEO/vid_pc200.h VIDEO/vid_pcjr.h VIDEO/vid_ps1_svga.h VIDEO/vid_s3.h VIDEO/vid_s3_virge.h VIDEO/vid_tandy.h \
			VIDEO/vid_tandysl.h VIDEO/vid_tgui9440.h VIDEO/vid_tvga.h VIDEO/vid_vga.h VIDEO/vid_wy700.h

win.o:		86box.h device.h disc.h fdd.h hdd.h ibm.h CPU/cpu.h mem.h rom.h nvr.h config.h model.h hdd_ide_at.h cdrom.h cdrom_null.h \
			cdrom_ioctl.h cdrom_image.h scsi.h scsi_disk.h VIDEO/video.h VIDEO/vid_ega.h mouse.h SOUND/sound.h SOUND/snd_dbopl.h \
			WIN/plat_keyboard.h WIN/plat_iodev.h WIN/plat_mouse.h WIN/plat_midi.h WIN/plat_thread.h WIN/plat_ticks.h WIN/plat_ui.h \
			WIN/resource.h WIN/win.h WIN/win_cgapal.h WIN/win_ddraw.h WIN/win_d3d.h WIN/win_language.h

win_d3d.o:		VIDEO/video.h WIN/win.h WIN/resource.h WIN/win_d3d.h WIN/win_cgapal.h

win_d3d_fs.o:	86box.h VIDEO/video.h WIN/win.h WIN/resource.h WIN/win_d3d.h WIN/win_cgapal.h

win_ddraw.o:	VIDEO/video.h WIN/resource.h WIN/win_ddraw.h WIN/win_cgapal.h

win_ddraw_fs.o:	VIDEO/video.h WIN/resource.h WIN/win_ddraw.h WIN/win_cgapal.h

win_ddraw_screenshot.o:	VIDEO/video.h WIN/resource.h WIN/win.h WIN/win_ddraw.h WIN/win_language.h

win_deviceconfig.o:	WIN/plat_midi.h WIN/resource.h WIN/win.h WIN/win_language.h

win_dynld.o:	WIN/plat_dynld.h WIN/resource.h ibm.h

win_iodev.o:	ibm.h device.h cdrom.h cdrom_image.h cdrom_ioctl.h cdrom_null.h scsi_disk.h WIN/plat_iodev.h WIN/resource.h WIN/win.h

win_joystick.o:	device.h gameport.h WIN/plat_joystick.h WIN/resource.h WIN/win.h

win_joystickconfig.o:	ibm.h config.h device.h gameport.h WIN/plat_joystick.h WIN/resource.h WIN/win.h

win_keyboard.o:	device.h WIN/plat_keyboard.h WIN/resource.h WIN/win.h

win_language.o:	ibm.h device.h WIN/plat_ui.h WIN/resource.h WIN/win.h WIN/win_language.h

win_midi.o:		ibm.h config.h SOUND/midi.h WIN/plat_midi.h WIN/resource.h

win_mouse.o:	WIN/plat_mouse.h WIN/resource.h WIN/win.h

win_opendir.o:	ibm.h WIN/plat_dir.h WIN/resource.h

win_serial.o:	WIN/plat_thread.h WIN/plat_serial.h WIN/resource.h

win_settings.o:	ibm.h mem.h CPU/cpu.h nvr.h device.h model.h cdrom.h disc.h fdd.h hdd.h hdd_ide_at.h scsi.h NETWORK/network.h SOUND/midi.h \
		SOUND/sound.h SOUND/snd_dbopl.h SOUND/snd_mpu401.h VIDEO/video.h VIDEO/vid_voodoo.h gameport.h mouse.h WIN/plat_midi.h \
		WIN/resource.h WIN/win.h WIN/win_language.h

win_status.o:	ibm.h mem.h CPU/x86_ops.h CPU/codegen.h device.h WIN/resource.h WIN/win.h

win_video.o:	VIDEO/video.h WIN/resource.h WIN/win_cgapal.h


# End of Makefile.mingw.
