Comparing files CPU\x86_ops_ret.h and CPU_NEW\X86_OPS_RET.H
***** CPU\x86_ops_ret.h
#define RETF_a16(stack_offset)                                  \
                if ((msw&1) && !(cpu_state.eflags&VM_FLAG))               \
                {                                               \
***** CPU_NEW\X86_OPS_RET.H
#define RETF_a16(stack_offset)                                  \
                if ((msw&1) && !(cpu_state.eflags&VM_FLAG))     \
                {                                               \
*****

***** CPU\x86_ops_ret.h
                }                                               \
                                oxpc = cpu_state.pc;                                                    \
                if (stack32)                                    \
***** CPU_NEW\X86_OPS_RET.H
                }                                               \
                if (stack32)                                    \
*****

***** CPU\x86_ops_ret.h
#define RETF_a32(stack_offset)                                  \
                if ((msw&1) && !(cpu_state.eflags&VM_FLAG))               \
                {                                               \
***** CPU_NEW\X86_OPS_RET.H
#define RETF_a32(stack_offset)                                  \
                if ((msw&1) && !(cpu_state.eflags&VM_FLAG))     \
                {                                               \
*****

***** CPU\x86_ops_ret.h
                }                                               \
                                oxpc = cpu_state.pc;                                                    \
                if (stack32)                                    \
***** CPU_NEW\X86_OPS_RET.H
                }                                               \
                if (stack32)                                    \
*****

***** CPU\x86_ops_ret.h
                uint16_t new_cs;
                                oxpc = cpu_state.pc;
                if (stack32)
***** CPU_NEW\X86_OPS_RET.H
                uint16_t new_cs;
                if (stack32)
*****

***** CPU\x86_ops_ret.h
                        uint16_t new_cs;
                                                oxpc = cpu_state.pc;
                        if (stack32)
***** CPU_NEW\X86_OPS_RET.H
                        uint16_t new_cs;
                        if (stack32)
*****

***** CPU\x86_ops_ret.h
                uint16_t new_cs;
                                oxpc = cpu_state.pc;
                if (stack32)
***** CPU_NEW\X86_OPS_RET.H
                uint16_t new_cs;
                if (stack32)
*****

